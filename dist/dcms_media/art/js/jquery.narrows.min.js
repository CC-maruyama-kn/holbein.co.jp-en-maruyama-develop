!function(a) {
    var b = {
        __relations: {},
        __options: {},
        __ukeys: {},
        __ukey_name: "jquery-narrows-unique-key",
        init: function(c) {
            var d = this, e = a(c);
            return b.check_parameters(d, e), b.add_new_relations(d, e), e.attr("disabled", "disabled"), d.on("change init", b.onchange_handler).trigger("init"), d
        },
        check_parameters: function(b, c) {
            for (var d = [b, c], e = 0, f = d.length; f > e; e++) {
                var g = d[e];
                0 === g.size() && a.error("selector " + g.selector + ": element not found"), g.each(function() {
                    "SELECT" != a(this).prop("tagName") && a.error("selector " + g.selector + ": includes non-select element(s)"), a(this).attr("id") || a.error("id is required for all select elements")
                })
            }
            var h = b.map(function() {
                return a(this).attr("id")
            });
            c.each(function() {
                for (var b = 0, c = h.length; c > b; b++) {
                    var d = "data-" + h[b], e = a(this);
                    e.find("option").each(function() {
                        var b = a(this);
                        if (b.val()&&!b.attr(d)) {
                            var c = e.attr("id");
                            a.error('options of select "#' + c + '" require "' + d + '" attribute')
                        }
                    })
                }
            })
        },
        add_new_relations: function(c, d) {
            var e = [];
            c.each(function() {
                var c = b.unique_key(a(this));
                e.push(c)
            });
            var f = [];
            d.each(function() {
                var c = b.unique_key(a(this));
                f.push(c), b.__options[c] = a(this).find("option").get()
            });
            for (var g = 0, h = e.length; h > g; g++) {
                var i = e[g];
                b.__relations[i] || (b.__relations[i] = []), b.__relations[i].push({
                    $parents: c,
                    $children: d,
                    initialized: !1
                })
            }
        },
        unique_key: function(a) {
            var c = a.data(b.__ukey_name);
            if (c)
                return c;
            do 
                c = (0 | 1e7 * Math.random()).toString(16);
            while (void 0 !== b.__ukeys[c]);
            return a.data(b.__ukey_name, c), b.__ukeys[c] = 1, c
        },
        onchange_handler: function(c) {
            for (var d = a(this).data(b.__ukey_name), e = b.__relations[d], f = 0, g = e.length; g > f; f++) {
                var h = e[f];
                if ("init" != c.type ||!h.initialized) {
                    h.initialized=!0;
                    var i = {}, j=!0;
                    h.$parents.each(function() {
                        var b = a(this).val();
                        return b ? (i[a(this).attr("id")] = b, void 0) : (j=!1, !1)
                    }), j ? h.$children.each(function() {
                        $child_select = a(this);
                        var c = $child_select.val();
                        $child_select.removeAttr("disabled").find('option[value!=""]').remove();
                        for (var d = $child_select.data(b.__ukey_name), e = b.__options[d], f = 0, g = e.length; g > f; f++) {
                            var h = a(e[f]), j=!0;
                            for (var k in i) {
                                var l = i[k];
                                if (h.data(k) != l) {
                                    j=!1;
                                    break
                                }
                            }
                            j && (h.val() == c && h.prop("selected", !0), $child_select.append(h))
                        }
                    }) : h.$children.each(function() {
                        a(this).attr("disabled", "disabled").val("").find('option[value!=""]').remove()
                    }), h.$children.trigger(c.type)
                }
            }
        }
    };
    a.fn.narrows = function(c) {
        return b[c] ? b[c].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof c && "string" != typeof c && c ? (a.error("Method " + c + " does not exist on jQuery.narrows"), void 0) : b.init.apply(this, arguments)
    }
}(jQuery);